{
    "rbac": [
        {
            "apiVersion": "v1",
            "items": [
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:31:51Z",
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-controller",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "appmesh-controller",
                            "app.kubernetes.io/version": "0.4.0",
                            "helm.sh/chart": "appmesh-controller-0.5.0"
                        },
                        "name": "appmesh-controller",
                        "namespace": "appmesh-system",
                        "resourceVersion": "2336",
                        "selfLink": "/api/v1/namespaces/appmesh-system/serviceaccounts/appmesh-controller",
                        "uid": "191f0287-f1e7-4639-a463-f1b24b5e8d9b"
                    },
                    "secrets": [
                        {
                            "name": "appmesh-controller-token-82kxk"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:33:08Z",
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-inject",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "appmesh-inject",
                            "app.kubernetes.io/version": "0.4.0",
                            "helm.sh/chart": "appmesh-inject-0.11.0"
                        },
                        "name": "appmesh-inject",
                        "namespace": "appmesh-system",
                        "resourceVersion": "2502",
                        "selfLink": "/api/v1/namespaces/appmesh-system/serviceaccounts/appmesh-inject",
                        "uid": "9023cd3a-0299-4db3-822e-142948894a34"
                    },
                    "secrets": [
                        {
                            "name": "appmesh-inject-token-z9pds"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:31:19Z",
                        "name": "default",
                        "namespace": "appmesh-system",
                        "resourceVersion": "2266",
                        "selfLink": "/api/v1/namespaces/appmesh-system/serviceaccounts/default",
                        "uid": "47a26e35-1e80-445c-8314-5700b54b8cbf"
                    },
                    "secrets": [
                        {
                            "name": "default-token-26s5s"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:02Z",
                        "name": "default",
                        "namespace": "default",
                        "resourceVersion": "289",
                        "selfLink": "/api/v1/namespaces/default/serviceaccounts/default",
                        "uid": "07b0cef7-7f67-4be5-a0e5-dca3d30a0c66"
                    },
                    "secrets": [
                        {
                            "name": "default-token-p4kdq"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:31:03Z",
                        "name": "default",
                        "namespace": "demo",
                        "resourceVersion": "2236",
                        "selfLink": "/api/v1/namespaces/demo/serviceaccounts/default",
                        "uid": "137356cb-efe5-428c-80af-25fea44242d2"
                    },
                    "secrets": [
                        {
                            "name": "default-token-g8psc"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:02Z",
                        "name": "default",
                        "namespace": "kube-node-lease",
                        "resourceVersion": "302",
                        "selfLink": "/api/v1/namespaces/kube-node-lease/serviceaccounts/default",
                        "uid": "f4db64dd-ce45-4ef7-b3f3-4d90d79896bf"
                    },
                    "secrets": [
                        {
                            "name": "default-token-ghh98"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:02Z",
                        "name": "default",
                        "namespace": "kube-public",
                        "resourceVersion": "293",
                        "selfLink": "/api/v1/namespaces/kube-public/serviceaccounts/default",
                        "uid": "1896be52-5fc9-4361-9286-11234ac34756"
                    },
                    "secrets": [
                        {
                            "name": "default-token-kpmxj"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:01Z",
                        "name": "attachdetach-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "277",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/attachdetach-controller",
                        "uid": "b1f9f4bc-fe1e-4c34-ab24-3d18f9129dc0"
                    },
                    "secrets": [
                        {
                            "name": "attachdetach-controller-token-nxdnr"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:11:58Z",
                        "name": "aws-cloud-provider",
                        "namespace": "kube-system",
                        "resourceVersion": "207",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/aws-cloud-provider",
                        "uid": "02932969-bfe7-4461-a971-83297f9c849f"
                    },
                    "secrets": [
                        {
                            "name": "aws-cloud-provider-token-wx6pm"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"name\":\"aws-node\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "name": "aws-node",
                        "namespace": "kube-system",
                        "resourceVersion": "202",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/aws-node",
                        "uid": "9fab4e7a-1c67-48bf-a98e-0c84471d53c4"
                    },
                    "secrets": [
                        {
                            "name": "aws-node-token-fn6rm"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "certificate-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "239",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/certificate-controller",
                        "uid": "60b3d35a-7eed-42fc-ad0b-7897b9b29bf0"
                    },
                    "secrets": [
                        {
                            "name": "certificate-controller-token-lgvqs"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "clusterrole-aggregation-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "260",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/clusterrole-aggregation-controller",
                        "uid": "900d57bf-18d2-4932-bb43-0b0d43bb115f"
                    },
                    "secrets": [
                        {
                            "name": "clusterrole-aggregation-controller-token-f85sd"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns"
                        },
                        "name": "coredns",
                        "namespace": "kube-system",
                        "resourceVersion": "204",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/coredns",
                        "uid": "a84a50cc-f77c-486d-b62e-0011b5447f67"
                    },
                    "secrets": [
                        {
                            "name": "coredns-token-gnh8j"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "cronjob-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "245",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/cronjob-controller",
                        "uid": "429530ef-a9fd-437d-9db7-5241f5b50e2c"
                    },
                    "secrets": [
                        {
                            "name": "cronjob-controller-token-kkp6m"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "daemon-set-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "257",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/daemon-set-controller",
                        "uid": "6ec2e202-aad0-40c1-8a45-ff468ef0ca96"
                    },
                    "secrets": [
                        {
                            "name": "daemon-set-controller-token-j64z9"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:02Z",
                        "name": "default",
                        "namespace": "kube-system",
                        "resourceVersion": "291",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/default",
                        "uid": "5b3a150d-f834-4102-ad39-0cc1f0c7d5f0"
                    },
                    "secrets": [
                        {
                            "name": "default-token-p2lww"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "deployment-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "227",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/deployment-controller",
                        "uid": "b536f7f2-3ccc-48d8-ab28-d565898cb0bc"
                    },
                    "secrets": [
                        {
                            "name": "deployment-controller-token-4vk99"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "disruption-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "265",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/disruption-controller",
                        "uid": "bcd2dfee-c9af-4bcb-b59a-ef6fdd55b282"
                    },
                    "secrets": [
                        {
                            "name": "disruption-controller-token-kn442"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "endpoint-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "253",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/endpoint-controller",
                        "uid": "efce0690-8f25-4be3-a0d2-06aef5c75242"
                    },
                    "secrets": [
                        {
                            "name": "endpoint-controller-token-48fhx"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:01Z",
                        "name": "expand-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "271",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/expand-controller",
                        "uid": "49b3857f-eb10-4a98-a375-46e32d3bc4ea"
                    },
                    "secrets": [
                        {
                            "name": "expand-controller-token-vgm8s"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:11:59Z",
                        "name": "generic-garbage-collector",
                        "namespace": "kube-system",
                        "resourceVersion": "224",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/generic-garbage-collector",
                        "uid": "c6305ac9-7d7d-483e-ba9f-a66067ef10a3"
                    },
                    "secrets": [
                        {
                            "name": "generic-garbage-collector-token-jbhcf"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:01Z",
                        "name": "horizontal-pod-autoscaler",
                        "namespace": "kube-system",
                        "resourceVersion": "274",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/horizontal-pod-autoscaler",
                        "uid": "a0ef85d3-5820-4472-8a27-ac2acdf8ccf5"
                    },
                    "secrets": [
                        {
                            "name": "horizontal-pod-autoscaler-token-5527c"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "job-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "249",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/job-controller",
                        "uid": "7676f725-5faa-413b-a32d-2dda64cbaf4b"
                    },
                    "secrets": [
                        {
                            "name": "job-controller-token-v2z64"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "labels": {
                            "eks.amazonaws.com/component": "kube-proxy",
                            "k8s-app": "kube-proxy"
                        },
                        "name": "kube-proxy",
                        "namespace": "kube-system",
                        "resourceVersion": "208",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/kube-proxy",
                        "uid": "0d636fd4-abdd-4beb-a3ed-db96bc2a17c9"
                    },
                    "secrets": [
                        {
                            "name": "kube-proxy-token-562l7"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:11:59Z",
                        "name": "namespace-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "215",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/namespace-controller",
                        "uid": "d3a6e4ea-59c4-45ea-be8e-25a3a0506b83"
                    },
                    "secrets": [
                        {
                            "name": "namespace-controller-token-qzfkb"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:11:59Z",
                        "name": "node-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "222",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/node-controller",
                        "uid": "2bfe4366-e56f-4942-9c84-091a4f023f73"
                    },
                    "secrets": [
                        {
                            "name": "node-controller-token-dklz2"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "persistent-volume-binder",
                        "namespace": "kube-system",
                        "resourceVersion": "246",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/persistent-volume-binder",
                        "uid": "0a45c03e-be11-4b4f-a9bd-80a9c992679f"
                    },
                    "secrets": [
                        {
                            "name": "persistent-volume-binder-token-5zs2q"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "pod-garbage-collector",
                        "namespace": "kube-system",
                        "resourceVersion": "237",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/pod-garbage-collector",
                        "uid": "fd7e56e5-b211-49ec-95c9-b8063fedfb04"
                    },
                    "secrets": [
                        {
                            "name": "pod-garbage-collector-token-6cxv7"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "pv-protection-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "234",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/pv-protection-controller",
                        "uid": "6e5cc8ae-88f5-44df-9278-9d7e69141392"
                    },
                    "secrets": [
                        {
                            "name": "pv-protection-controller-token-78xz9"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "pvc-protection-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "231",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/pvc-protection-controller",
                        "uid": "5c50840b-ad2f-4334-8de5-f6549fca03a7"
                    },
                    "secrets": [
                        {
                            "name": "pvc-protection-controller-token-gglnr"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:02Z",
                        "name": "replicaset-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "283",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/replicaset-controller",
                        "uid": "6b6069dc-0401-4065-96cc-a996d7540864"
                    },
                    "secrets": [
                        {
                            "name": "replicaset-controller-token-2k66d"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:00Z",
                        "name": "replication-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "262",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/replication-controller",
                        "uid": "17d1e822-7f85-4ea0-b926-c853c4b1bb2e"
                    },
                    "secrets": [
                        {
                            "name": "replication-controller-token-kkc6k"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:11:59Z",
                        "name": "resourcequota-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "210",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/resourcequota-controller",
                        "uid": "1ac37399-cbd5-4054-b8e5-058d5453a481"
                    },
                    "secrets": [
                        {
                            "name": "resourcequota-controller-token-zqsbm"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:01Z",
                        "name": "service-account-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "280",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/service-account-controller",
                        "uid": "b1d578cd-62b2-4104-8bfd-78dbda5584ee"
                    },
                    "secrets": [
                        {
                            "name": "service-account-controller-token-lgxnk"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:11:59Z",
                        "name": "service-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "219",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/service-controller",
                        "uid": "54144878-0386-4c92-9d8b-97665683b756"
                    },
                    "secrets": [
                        {
                            "name": "service-controller-token-kflsj"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:11:58Z",
                        "name": "statefulset-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "203",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/statefulset-controller",
                        "uid": "39949ef0-6005-4837-a610-ab4a012e34a9"
                    },
                    "secrets": [
                        {
                            "name": "statefulset-controller-token-sr89s"
                        }
                    ]
                },
                {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:12:01Z",
                        "name": "ttl-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "268",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/ttl-controller",
                        "uid": "030d4adf-bb66-4117-8dc6-bc213718e6c3"
                    },
                    "secrets": [
                        {
                            "name": "ttl-controller-token-gtrgg"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:bootstrap-signer",
                        "namespace": "kube-public",
                        "resourceVersion": "135",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-public/roles/system:controller:bootstrap-signer",
                        "uid": "21d9701d-b59a-4166-a5b4-57138ee5ef3b"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "cluster-info"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-manager\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resourceNames\":[\"aws-auth\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"get\",\"list\"]}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "name": "eks:fargate-manager",
                        "namespace": "kube-system",
                        "resourceVersion": "175",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/eks:fargate-manager",
                        "uid": "de4bc9bc-9975-4879-af1d-f2a798f5e156"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "aws-auth"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update",
                                "patch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "get",
                                "list"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"name\":\"eks:node-manager\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resourceNames\":[\"aws-auth\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"get\",\"list\"]}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "name": "eks:node-manager",
                        "namespace": "kube-system",
                        "resourceVersion": "153",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/eks:node-manager",
                        "uid": "afa75c00-81bc-4589-a2ec-64640a9917dd"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "aws-auth"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "get",
                                "list"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "extension-apiserver-authentication-reader",
                        "namespace": "kube-system",
                        "resourceVersion": "129",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/extension-apiserver-authentication-reader",
                        "uid": "9bdfd155-2522-425d-ba2b-a50bfecdb9a6"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "extension-apiserver-authentication"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system::leader-locking-kube-controller-manager",
                        "namespace": "kube-system",
                        "resourceVersion": "133",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system::leader-locking-kube-controller-manager",
                        "uid": "1240adcf-542f-45ca-b446-9b43e0fbd091"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "kube-controller-manager"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system::leader-locking-kube-scheduler",
                        "namespace": "kube-system",
                        "resourceVersion": "134",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system::leader-locking-kube-scheduler",
                        "uid": "cc436ff4-6e06-48f9-9222-5d1fc03c39c3"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "kube-scheduler"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:bootstrap-signer",
                        "namespace": "kube-system",
                        "resourceVersion": "130",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system:controller:bootstrap-signer",
                        "uid": "774ed1e8-10ae-4455-a6e1-fe314650198e"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:cloud-provider",
                        "namespace": "kube-system",
                        "resourceVersion": "131",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system:controller:cloud-provider",
                        "uid": "827d6c81-f35c-4bd2-b957-bbcb66d6baaf"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "create",
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:token-cleaner",
                        "namespace": "kube-system",
                        "resourceVersion": "132",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/system:controller:token-cleaner",
                        "uid": "ded77923-ad57-46f7-91f6-5f41a18f3d7c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "delete",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:bootstrap-signer",
                        "namespace": "kube-public",
                        "resourceVersion": "142",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-public/rolebindings/system:controller:bootstrap-signer",
                        "uid": "8b0e3475-ba58-4223-95cd-09d299852526"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "system:controller:bootstrap-signer"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "bootstrap-signer",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-manager\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:fargate-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:fargate-manager\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "name": "eks:fargate-manager",
                        "namespace": "kube-system",
                        "resourceVersion": "174",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/eks:fargate-manager",
                        "uid": "32702f8a-7ba9-4b21-a4a6-072540f7dbf8"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "eks:fargate-manager"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "eks:fargate-manager"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:node-manager\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"eks:node-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:node-manager\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "name": "eks:node-manager",
                        "namespace": "kube-system",
                        "resourceVersion": "152",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/eks:node-manager",
                        "uid": "d25df9d5-d7c1-45b1-b706-f2bdc489c272"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "eks:node-manager"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "eks:node-manager"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system::extension-apiserver-authentication-reader",
                        "namespace": "kube-system",
                        "resourceVersion": "136",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system::extension-apiserver-authentication-reader",
                        "uid": "86e37f04-f131-44bc-9d89-b46d7af33c95"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "extension-apiserver-authentication-reader"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "system:kube-controller-manager"
                        },
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "system:kube-scheduler"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system::leader-locking-kube-controller-manager",
                        "namespace": "kube-system",
                        "resourceVersion": "137",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system::leader-locking-kube-controller-manager",
                        "uid": "8e0ea1e3-550b-47d0-adac-278dd82bf4da"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "system::leader-locking-kube-controller-manager"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "system:kube-controller-manager"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "kube-controller-manager",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system::leader-locking-kube-scheduler",
                        "namespace": "kube-system",
                        "resourceVersion": "138",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system::leader-locking-kube-scheduler",
                        "uid": "df2ec1bf-4d82-4298-9676-7d946b00abf5"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "system::leader-locking-kube-scheduler"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "system:kube-scheduler"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "kube-scheduler",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:bootstrap-signer",
                        "namespace": "kube-system",
                        "resourceVersion": "139",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system:controller:bootstrap-signer",
                        "uid": "bbe8c9ff-e0d6-4c9c-b93a-ed685ddd948c"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "system:controller:bootstrap-signer"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "bootstrap-signer",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:cloud-provider",
                        "namespace": "kube-system",
                        "resourceVersion": "140",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system:controller:cloud-provider",
                        "uid": "4febbef4-ebee-4663-b79f-d1fe19b4532c"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "system:controller:cloud-provider"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "cloud-provider",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:token-cleaner",
                        "namespace": "kube-system",
                        "resourceVersion": "141",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/system:controller:token-cleaner",
                        "uid": "96b5363d-869e-4c80-a1c1-3a184107c741"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "system:controller:token-cleaner"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "token-cleaner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "aggregationRule": {
                        "clusterRoleSelectors": [
                            {
                                "matchLabels": {
                                    "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                                }
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "admin",
                        "resourceVersion": "299",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/admin",
                        "uid": "6079dd8a-6ec4-40cc-bef2-060f9341fe95"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/attach",
                                "pods/exec",
                                "pods/portforward",
                                "pods/proxy",
                                "secrets",
                                "services/proxy"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "impersonate"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "pods/attach",
                                "pods/exec",
                                "pods/portforward",
                                "pods/proxy"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "endpoints",
                                "persistentvolumeclaims",
                                "replicationcontrollers",
                                "replicationcontrollers/scale",
                                "secrets",
                                "serviceaccounts",
                                "services",
                                "services/proxy"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/rollback",
                                "deployments/scale",
                                "replicasets",
                                "replicasets/scale",
                                "statefulsets",
                                "statefulsets/scale"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs",
                                "jobs"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/rollback",
                                "deployments/scale",
                                "ingresses",
                                "networkpolicies",
                                "replicasets",
                                "replicasets/scale",
                                "replicationcontrollers/scale"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "networkpolicies"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "endpoints",
                                "persistentvolumeclaims",
                                "pods",
                                "replicationcontrollers",
                                "replicationcontrollers/scale",
                                "serviceaccounts",
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "bindings",
                                "events",
                                "limitranges",
                                "namespaces/status",
                                "pods/log",
                                "pods/status",
                                "replicationcontrollers/status",
                                "resourcequotas",
                                "resourcequotas/status"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "controllerrevisions",
                                "daemonsets",
                                "deployments",
                                "deployments/scale",
                                "replicasets",
                                "replicasets/scale",
                                "statefulsets",
                                "statefulsets/scale"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs",
                                "jobs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/scale",
                                "ingresses",
                                "networkpolicies",
                                "replicasets",
                                "replicasets/scale",
                                "replicationcontrollers/scale"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "networkpolicies"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "localsubjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "rbac.authorization.k8s.io"
                            ],
                            "resources": [
                                "rolebindings",
                                "roles"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:31:51Z",
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-controller",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "appmesh-controller",
                            "app.kubernetes.io/version": "0.4.0",
                            "helm.sh/chart": "appmesh-controller-0.5.0"
                        },
                        "name": "appmesh-controller",
                        "resourceVersion": "2337",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/appmesh-controller",
                        "uid": "cdb046a6-b946-4b3a-a896-73554a63150e"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "app-mesh-controller-leader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                "appmesh.k8s.aws"
                            ],
                            "resources": [
                                "meshes",
                                "virtualnodes",
                                "virtualservices",
                                "meshes/status",
                                "virtualnodes/status",
                                "virtualservices/status"
                            ],
                            "verbs": [
                                "*"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:33:08Z",
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-inject",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "appmesh-inject",
                            "app.kubernetes.io/version": "0.4.0",
                            "helm.sh/chart": "appmesh-inject-0.11.0"
                        },
                        "name": "appmesh-inject",
                        "resourceVersion": "2504",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/appmesh-inject",
                        "uid": "5e0dd601-5159-40a1-bb6d-188be96f1162"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"aws-node\"},\"rules\":[{\"apiGroups\":[\"crd.k8s.amazonaws.com\"],\"resources\":[\"*\",\"namespaces\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"nodes\",\"namespaces\"],\"verbs\":[\"list\",\"watch\",\"get\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"daemonsets\"],\"verbs\":[\"list\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "name": "aws-node",
                        "resourceVersion": "154",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/aws-node",
                        "uid": "27439207-e42a-4981-85a5-e8e07809ecd7"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "crd.k8s.amazonaws.com"
                            ],
                            "resources": [
                                "*",
                                "namespaces"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "nodes",
                                "namespaces"
                            ],
                            "verbs": [
                                "list",
                                "watch",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "cluster-admin",
                        "resourceVersion": "40",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/cluster-admin",
                        "uid": "0ebc0821-bc69-4bb2-9089-432c48e731c6"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "nonResourceURLs": [
                                "*"
                            ],
                            "verbs": [
                                "*"
                            ]
                        }
                    ]
                },
                {
                    "aggregationRule": {
                        "clusterRoleSelectors": [
                            {
                                "matchLabels": {
                                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                }
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults",
                            "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                        },
                        "name": "edit",
                        "resourceVersion": "298",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/edit",
                        "uid": "7b4e4dbc-70bf-4c7a-8d76-4f1ea961f44b"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/attach",
                                "pods/exec",
                                "pods/portforward",
                                "pods/proxy",
                                "secrets",
                                "services/proxy"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "impersonate"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "pods/attach",
                                "pods/exec",
                                "pods/portforward",
                                "pods/proxy"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "endpoints",
                                "persistentvolumeclaims",
                                "replicationcontrollers",
                                "replicationcontrollers/scale",
                                "secrets",
                                "serviceaccounts",
                                "services",
                                "services/proxy"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/rollback",
                                "deployments/scale",
                                "replicasets",
                                "replicasets/scale",
                                "statefulsets",
                                "statefulsets/scale"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs",
                                "jobs"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/rollback",
                                "deployments/scale",
                                "ingresses",
                                "networkpolicies",
                                "replicasets",
                                "replicasets/scale",
                                "replicationcontrollers/scale"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "networkpolicies"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "endpoints",
                                "persistentvolumeclaims",
                                "pods",
                                "replicationcontrollers",
                                "replicationcontrollers/scale",
                                "serviceaccounts",
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "bindings",
                                "events",
                                "limitranges",
                                "namespaces/status",
                                "pods/log",
                                "pods/status",
                                "replicationcontrollers/status",
                                "resourcequotas",
                                "resourcequotas/status"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "controllerrevisions",
                                "daemonsets",
                                "deployments",
                                "deployments/scale",
                                "replicasets",
                                "replicasets/scale",
                                "statefulsets",
                                "statefulsets/scale"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs",
                                "jobs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/scale",
                                "ingresses",
                                "networkpolicies",
                                "replicasets",
                                "replicasets/scale",
                                "replicationcontrollers/scale"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "networkpolicies"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-manager\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods/eviction\"],\"verbs\":[\"create\"]}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "name": "eks:fargate-manager",
                        "resourceVersion": "178",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/eks%3Afargate-manager",
                        "uid": "eed441dd-8e8f-491a-afee-c9a4a21e7d1f"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/eviction"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"node\"},\"name\":\"eks:node-bootstrapper\"},\"rules\":[{\"apiGroups\":[\"certificates.k8s.io\"],\"resources\":[\"certificatesigningrequests/selfnodeserver\"],\"verbs\":[\"create\"]}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "labels": {
                            "eks.amazonaws.com/component": "node"
                        },
                        "name": "eks:node-bootstrapper",
                        "resourceVersion": "186",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/eks%3Anode-bootstrapper",
                        "uid": "2be3bc76-8a78-4b1c-93b2-fdea847667a3"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "certificates.k8s.io"
                            ],
                            "resources": [
                                "certificatesigningrequests/selfnodeserver"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"eks:node-manager\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods/eviction\"],\"verbs\":[\"create\"]}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "name": "eks:node-manager",
                        "resourceVersion": "163",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/eks%3Anode-manager",
                        "uid": "ad65d495-8c54-42ef-863b-776cb9a041da"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/eviction"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"pod-security-policy\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"eks:podsecuritypolicy:privileged\"},\"rules\":[{\"apiGroups\":[\"policy\"],\"resourceNames\":[\"eks.privileged\"],\"resources\":[\"podsecuritypolicies\"],\"verbs\":[\"use\"]}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "labels": {
                            "eks.amazonaws.com/component": "pod-security-policy",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "name": "eks:podsecuritypolicy:privileged",
                        "resourceVersion": "188",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/eks%3Apodsecuritypolicy%3Aprivileged",
                        "uid": "a5b138d3-996f-439d-9a9c-580a28b81647"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resourceNames": [
                                "eks.privileged"
                            ],
                            "resources": [
                                "podsecuritypolicies"
                            ],
                            "verbs": [
                                "use"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults",
                            "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                        },
                        "name": "system:aggregate-to-admin",
                        "resourceVersion": "47",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aaggregate-to-admin",
                        "uid": "32b1c3e4-dfdf-46f3-897a-dfd754e5c7c0"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "localsubjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "rbac.authorization.k8s.io"
                            ],
                            "resources": [
                                "rolebindings",
                                "roles"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults",
                            "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                        },
                        "name": "system:aggregate-to-edit",
                        "resourceVersion": "48",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aaggregate-to-edit",
                        "uid": "9c5e91a6-5d9c-427a-bdce-8e9aab41cfdf"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/attach",
                                "pods/exec",
                                "pods/portforward",
                                "pods/proxy",
                                "secrets",
                                "services/proxy"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "impersonate"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "pods/attach",
                                "pods/exec",
                                "pods/portforward",
                                "pods/proxy"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "endpoints",
                                "persistentvolumeclaims",
                                "replicationcontrollers",
                                "replicationcontrollers/scale",
                                "secrets",
                                "serviceaccounts",
                                "services",
                                "services/proxy"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/rollback",
                                "deployments/scale",
                                "replicasets",
                                "replicasets/scale",
                                "statefulsets",
                                "statefulsets/scale"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs",
                                "jobs"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/rollback",
                                "deployments/scale",
                                "ingresses",
                                "networkpolicies",
                                "replicasets",
                                "replicasets/scale",
                                "replicationcontrollers/scale"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "networkpolicies"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "deletecollection",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults",
                            "rbac.authorization.k8s.io/aggregate-to-view": "true"
                        },
                        "name": "system:aggregate-to-view",
                        "resourceVersion": "49",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aaggregate-to-view",
                        "uid": "a436d3f5-f054-4c6a-a06b-35eaab439c01"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "endpoints",
                                "persistentvolumeclaims",
                                "pods",
                                "replicationcontrollers",
                                "replicationcontrollers/scale",
                                "serviceaccounts",
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "bindings",
                                "events",
                                "limitranges",
                                "namespaces/status",
                                "pods/log",
                                "pods/status",
                                "replicationcontrollers/status",
                                "resourcequotas",
                                "resourcequotas/status"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "controllerrevisions",
                                "daemonsets",
                                "deployments",
                                "deployments/scale",
                                "replicasets",
                                "replicasets/scale",
                                "statefulsets",
                                "statefulsets/scale"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs",
                                "jobs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/scale",
                                "ingresses",
                                "networkpolicies",
                                "replicasets",
                                "replicasets/scale",
                                "replicationcontrollers/scale"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "networkpolicies"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:auth-delegator",
                        "resourceVersion": "56",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aauth-delegator",
                        "uid": "49c1aa9c-6079-4217-ba39-6e09f8353565"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:basic-user",
                        "resourceVersion": "42",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Abasic-user",
                        "uid": "731147a6-be79-4dc3-98ff-32e3d3534bc6"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "selfsubjectaccessreviews",
                                "selfsubjectrulesreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                        "resourceVersion": "63",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acertificates.k8s.io%3Acertificatesigningrequests%3Anodeclient",
                        "uid": "40c4009f-5443-4c69-bf0d-2637555906fb"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "certificates.k8s.io"
                            ],
                            "resources": [
                                "certificatesigningrequests/nodeclient"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                        "resourceVersion": "64",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acertificates.k8s.io%3Acertificatesigningrequests%3Aselfnodeclient",
                        "uid": "410965a7-3b9c-4c5f-903f-0ce944d91de9"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "certificates.k8s.io"
                            ],
                            "resources": [
                                "certificatesigningrequests/selfnodeclient"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:attachdetach-controller",
                        "resourceVersion": "67",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aattachdetach-controller",
                        "uid": "2a364f20-8fed-4992-9f77-006e55bbc943"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims",
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/status"
                            ],
                            "verbs": [
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "volumeattachments"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "csidrivers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:certificate-controller",
                        "resourceVersion": "90",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Acertificate-controller",
                        "uid": "0ca5d40e-7bc7-4e7d-a202-9d9dfc3c22c4"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "certificates.k8s.io"
                            ],
                            "resources": [
                                "certificatesigningrequests"
                            ],
                            "verbs": [
                                "delete",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "certificates.k8s.io"
                            ],
                            "resources": [
                                "certificatesigningrequests/approval",
                                "certificatesigningrequests/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:clusterrole-aggregation-controller",
                        "resourceVersion": "68",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aclusterrole-aggregation-controller",
                        "uid": "4fdd4ecd-becd-4cdf-b2a5-d3c754fa6aaf"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "*"
                            ]
                        },
                        {
                            "nonResourceURLs": [
                                "*"
                            ],
                            "verbs": [
                                "*"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:cronjob-controller",
                        "resourceVersion": "69",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Acronjob-controller",
                        "uid": "8c6f364d-0be2-4a20-9db4-b74f47d84fd4"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "delete",
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:daemon-set-controller",
                        "resourceVersion": "70",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Adaemon-set-controller",
                        "uid": "66045251-bf7d-47d1-a924-92994dbc2c0c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "list",
                                "patch",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/binding"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "controllerrevisions"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:deployment-controller",
                        "resourceVersion": "71",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Adeployment-controller",
                        "uid": "1a7e6fb5-7a93-41e3-b345-458eb67548f4"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "deployments"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "deployments/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "deployments/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:disruption-controller",
                        "resourceVersion": "72",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Adisruption-controller",
                        "uid": "2ced02b2-2867-4224-b8cc-b99c2a393193"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "deployments"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "replicationcontrollers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "statefulsets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "*/scale"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:endpoint-controller",
                        "resourceVersion": "73",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aendpoint-controller",
                        "uid": "ba1d1cba-8c54-4d42-b9ef-77838a2c721c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints/restricted"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:expand-controller",
                        "resourceVersion": "74",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aexpand-controller",
                        "uid": "bacb355f-e152-485c-80aa-03f9fa366f79"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims/status"
                            ],
                            "verbs": [
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints",
                                "services"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:generic-garbage-collector",
                        "resourceVersion": "75",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Ageneric-garbage-collector",
                        "uid": "529b8001-25af-496d-8d08-7e993afd860d"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:horizontal-pod-autoscaler",
                        "resourceVersion": "76",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Ahorizontal-pod-autoscaler",
                        "uid": "d3ad806e-7120-4728-83c3-0d3acc71b61d"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "*/scale"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "http:heapster:",
                                "https:heapster:"
                            ],
                            "resources": [
                                "services/proxy"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                "metrics.k8s.io"
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                "custom.metrics.k8s.io"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "get",
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:job-controller",
                        "resourceVersion": "77",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Ajob-controller",
                        "uid": "b1c4ab8e-d115-4a91-9848-45af1c69fe8b"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "list",
                                "patch",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:namespace-controller",
                        "resourceVersion": "78",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Anamespace-controller",
                        "uid": "46f6a8b8-4bf4-4aac-bc77-9d9014ac8da1"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces"
                            ],
                            "verbs": [
                                "delete",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces/finalize",
                                "namespaces/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "delete",
                                "deletecollection",
                                "get",
                                "list"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:node-controller",
                        "resourceVersion": "79",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Anode-controller",
                        "uid": "61d5ec98-a956-44a5-bf94-79a7ddf670a5"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/status"
                            ],
                            "verbs": [
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "delete",
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:persistent-volume-binder",
                        "resourceVersion": "80",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Apersistent-volume-binder",
                        "uid": "41b99ddf-3272-44b5-b9ed-8a65f3a55704"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "services"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:pod-garbage-collector",
                        "resourceVersion": "81",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Apod-garbage-collector",
                        "uid": "3830c255-5717-42f3-8c48-77fa5890ee70"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "delete",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "list"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:pv-protection-controller",
                        "resourceVersion": "92",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Apv-protection-controller",
                        "uid": "da8613b1-1280-41ce-82ec-793fbe158659"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:pvc-protection-controller",
                        "resourceVersion": "91",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Apvc-protection-controller",
                        "uid": "1ef40406-4369-4cec-b373-4b18fc99ad24"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:replicaset-controller",
                        "resourceVersion": "82",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Areplicaset-controller",
                        "uid": "a0f07196-e417-47eb-9398-1803e04b8ec2"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "replicasets/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "replicasets/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "list",
                                "patch",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:replication-controller",
                        "resourceVersion": "83",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Areplication-controller",
                        "uid": "bf22fae8-6038-49dc-a863-9a207e8534c0"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "replicationcontrollers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "replicationcontrollers/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "replicationcontrollers/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "list",
                                "patch",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:resourcequota-controller",
                        "resourceVersion": "84",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aresourcequota-controller",
                        "uid": "4b1c4f6c-2308-487a-8c25-e714ccdf71aa"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "resourcequotas/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:route-controller",
                        "resourceVersion": "85",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aroute-controller",
                        "uid": "c8505a01-509d-4bf6-99aa-82c406478473"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/status"
                            ],
                            "verbs": [
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:service-account-controller",
                        "resourceVersion": "86",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aservice-account-controller",
                        "uid": "bdd2d1e1-18ec-451f-be5d-784c4ca7d5dc"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:service-controller",
                        "resourceVersion": "87",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Aservice-controller",
                        "uid": "fc003503-266a-4855-bd1f-b243c7b11e74"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "services/status"
                            ],
                            "verbs": [
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:statefulset-controller",
                        "resourceVersion": "88",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Astatefulset-controller",
                        "uid": "8ae32f8c-c9b4-4e74-b231-936762d7fe04"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "statefulsets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "statefulsets/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "statefulsets/finalizers"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "controllerrevisions"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims"
                            ],
                            "verbs": [
                                "create",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:ttl-controller",
                        "resourceVersion": "89",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acontroller%3Attl-controller",
                        "uid": "fbc65ada-5dd7-4930-942f-7ff6dfe1cdc2"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/bootstrapping\":\"rbac-defaults\"},\"name\":\"system:coredns\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\",\"services\",\"pods\",\"namespaces\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\"]}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:coredns",
                        "resourceVersion": "165",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acoredns",
                        "uid": "75e43589-60f8-4c1b-9fc7-09da181ef849"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints",
                                "services",
                                "pods",
                                "namespaces"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:csi-external-attacher",
                        "resourceVersion": "62",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acsi-external-attacher",
                        "uid": "5d975244-b9eb-4463-abc5-1d628b34c3f9"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "volumeattachments"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:csi-external-provisioner",
                        "resourceVersion": "66",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Acsi-external-provisioner",
                        "uid": "aea65676-69bc-4b5f-b598-553660bbe198"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "csinodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:discovery",
                        "resourceVersion": "41",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Adiscovery",
                        "uid": "f1d30365-731a-4432-9a3d-88b3fa92f430"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/api",
                                "/api/*",
                                "/apis",
                                "/apis/*",
                                "/healthz",
                                "/openapi",
                                "/openapi/*",
                                "/version",
                                "/version/"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:heapster",
                        "resourceVersion": "50",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Aheapster",
                        "uid": "b5fefa09-0cb2-47d3-a09e-0f4fb91a92e8"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events",
                                "namespaces",
                                "nodes",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "deployments"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:kube-aggregator",
                        "resourceVersion": "57",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akube-aggregator",
                        "uid": "0e7bc64b-31c0-470b-9a77-991bea2236cc"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints",
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:kube-controller-manager",
                        "resourceVersion": "58",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akube-controller-manager",
                        "uid": "935ee81c-3d60-4101-9e39-00d1447fc387"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints",
                                "secrets",
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "endpoints",
                                "namespaces",
                                "secrets",
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints",
                                "secrets",
                                "serviceaccounts"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "*"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts/token"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:kube-dns",
                        "resourceVersion": "60",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akube-dns",
                        "uid": "cd7aa8c9-f1ef-4538-bd38-b706e6e8334a"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints",
                                "services"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:kube-scheduler",
                        "resourceVersion": "59",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akube-scheduler",
                        "uid": "4b1f5761-d278-4a77-abf2-d7e8c9ad323f"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "kube-scheduler"
                            ],
                            "resources": [
                                "endpoints"
                            ],
                            "verbs": [
                                "delete",
                                "get",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "delete",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "bindings",
                                "pods/binding"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/status"
                            ],
                            "verbs": [
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "replicationcontrollers",
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps",
                                "extensions"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "statefulsets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims",
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:kubelet-api-admin",
                        "resourceVersion": "54",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Akubelet-api-admin",
                        "uid": "75dd69e0-bbf4-4186-a02d-2944bc6fdee6"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "proxy"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/log",
                                "nodes/metrics",
                                "nodes/proxy",
                                "nodes/spec",
                                "nodes/stats"
                            ],
                            "verbs": [
                                "*"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:node",
                        "resourceVersion": "51",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anode",
                        "uid": "2a301fe5-e888-47a3-a6cf-b5b326e1b8e9"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "authorization.k8s.io"
                            ],
                            "resources": [
                                "localsubjectaccessreviews",
                                "subjectaccessreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "create",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/status"
                            ],
                            "verbs": [
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "create",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/status"
                            ],
                            "verbs": [
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods/eviction"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims",
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                "certificates.k8s.io"
                            ],
                            "resources": [
                                "certificatesigningrequests"
                            ],
                            "verbs": [
                                "create",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims/status"
                            ],
                            "verbs": [
                                "get",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "serviceaccounts/token"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "volumeattachments"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "csidrivers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "csinodes"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "coordination.k8s.io"
                            ],
                            "resources": [
                                "leases"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "patch",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "node.k8s.io"
                            ],
                            "resources": [
                                "runtimeclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:node-bootstrapper",
                        "resourceVersion": "55",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anode-bootstrapper",
                        "uid": "155a43ce-4170-408c-9fe1-ad0a49838e07"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "certificates.k8s.io"
                            ],
                            "resources": [
                                "certificatesigningrequests"
                            ],
                            "verbs": [
                                "create",
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:node-problem-detector",
                        "resourceVersion": "52",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anode-problem-detector",
                        "uid": "3ae90fda-a546-47d5-bec1-4d2ef3b4cfbb"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/status"
                            ],
                            "verbs": [
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:node-proxier",
                        "resourceVersion": "53",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Anode-proxier",
                        "uid": "55b1f2a9-5582-4692-b978-89f6b05558af"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "endpoints",
                                "services"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:persistent-volume-provisioner",
                        "resourceVersion": "61",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Apersistent-volume-provisioner",
                        "uid": "fadf11be-bff5-4fa3-b092-923b3ac047a7"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "create",
                                "delete",
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch",
                                "update"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:public-info-viewer",
                        "resourceVersion": "43",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Apublic-info-viewer",
                        "uid": "68406148-71d2-4df1-830a-0bc4e062e102"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/healthz",
                                "/version",
                                "/version/"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:volume-scheduler",
                        "resourceVersion": "65",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Avolume-scheduler",
                        "uid": "6aba7495-a3de-4f42-a3d1-62b7c8b6981b"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumeclaims"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "patch",
                                "update",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "aggregationRule": {
                        "clusterRoleSelectors": [
                            {
                                "matchLabels": {
                                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                                }
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults",
                            "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                        },
                        "name": "view",
                        "resourceVersion": "295",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/view",
                        "uid": "d19c6668-e090-4e8e-89a4-1ee761c9fd65"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "configmaps",
                                "endpoints",
                                "persistentvolumeclaims",
                                "pods",
                                "replicationcontrollers",
                                "replicationcontrollers/scale",
                                "serviceaccounts",
                                "services"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "bindings",
                                "events",
                                "limitranges",
                                "namespaces/status",
                                "pods/log",
                                "pods/status",
                                "replicationcontrollers/status",
                                "resourcequotas",
                                "resourcequotas/status"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "controllerrevisions",
                                "daemonsets",
                                "deployments",
                                "deployments/scale",
                                "replicasets",
                                "replicasets/scale",
                                "statefulsets",
                                "statefulsets/scale"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "autoscaling"
                            ],
                            "resources": [
                                "horizontalpodautoscalers"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "cronjobs",
                                "jobs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "deployments/scale",
                                "ingresses",
                                "networkpolicies",
                                "replicasets",
                                "replicasets/scale",
                                "replicationcontrollers/scale"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "policy"
                            ],
                            "resources": [
                                "poddisruptionbudgets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "networkpolicies"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:31:51Z",
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-controller",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "appmesh-controller",
                            "app.kubernetes.io/version": "0.4.0",
                            "helm.sh/chart": "appmesh-controller-0.5.0"
                        },
                        "name": "appmesh-controller",
                        "resourceVersion": "2338",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/appmesh-controller",
                        "uid": "a7b0ffc9-e897-4566-8b55-de25e751e9f4"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "appmesh-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "appmesh-controller",
                            "namespace": "appmesh-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "creationTimestamp": "2020-03-17T12:33:08Z",
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-inject",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "appmesh-inject",
                            "app.kubernetes.io/version": "0.4.0",
                            "helm.sh/chart": "appmesh-inject-0.11.0"
                        },
                        "name": "appmesh-inject",
                        "resourceVersion": "2505",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/appmesh-inject",
                        "uid": "24f17a24-6bd0-471a-ad59-ebe3f76dbff6"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "appmesh-inject"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "appmesh-inject",
                            "namespace": "appmesh-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"aws-node\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"aws-node\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"aws-node\",\"namespace\":\"kube-system\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "name": "aws-node",
                        "resourceVersion": "156",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/aws-node",
                        "uid": "a8c87df1-9aca-4194-80ee-87ab594ac349"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aws-node"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "aws-node",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "cluster-admin",
                        "resourceVersion": "93",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/cluster-admin",
                        "uid": "700494d9-f1b5-42ae-b7ee-492795052ce8"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "cluster-admin"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:masters"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:fargate-manager\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:fargate-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:fargate-manager\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "name": "eks:fargate-manager",
                        "resourceVersion": "177",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/eks%3Afargate-manager",
                        "uid": "3a8faf8a-8fdf-4b2c-ac23-8f76b1b274fe"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "eks:fargate-manager"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "eks:fargate-manager"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"eks:kube-proxy\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:node-proxier\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "labels": {
                            "eks.amazonaws.com/component": "kube-proxy",
                            "k8s-app": "kube-proxy"
                        },
                        "name": "eks:kube-proxy",
                        "resourceVersion": "182",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/eks%3Akube-proxy",
                        "uid": "f88a4cb4-4533-420c-bed5-38a3dad43440"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:node-proxier"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "kube-proxy",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:kube-proxy-fargate\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:node-proxier\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"system:node-proxier\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "name": "eks:kube-proxy-fargate",
                        "resourceVersion": "176",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/eks%3Akube-proxy-fargate",
                        "uid": "e5f594a9-4c05-4709-b7ae-18e28b03e5bf"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:node-proxier"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:node-proxier"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"eks:kube-proxy-windows\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:node-proxier\"},\"subjects\":[{\"kind\":\"Group\",\"name\":\"eks:kube-proxy-windows\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "labels": {
                            "eks.amazonaws.com/component": "kube-proxy",
                            "k8s-app": "kube-proxy"
                        },
                        "name": "eks:kube-proxy-windows",
                        "resourceVersion": "173",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/eks%3Akube-proxy-windows",
                        "uid": "a3fe9fbf-14be-45fd-9011-20e8b6f5ea04"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:node-proxier"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "eks:kube-proxy-windows"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"node\"},\"name\":\"eks:node-bootstrapper\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:node-bootstrapper\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"system:bootstrappers\"},{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"system:nodes\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "labels": {
                            "eks.amazonaws.com/component": "node"
                        },
                        "name": "eks:node-bootstrapper",
                        "resourceVersion": "185",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/eks%3Anode-bootstrapper",
                        "uid": "b755e538-8b07-4ab0-b95b-d55b27da143f"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "eks:node-bootstrapper"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:bootstrappers"
                        },
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:nodes"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"eks:node-manager\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:node-manager\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"User\",\"name\":\"eks:node-manager\"}]}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "name": "eks:node-manager",
                        "resourceVersion": "162",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/eks%3Anode-manager",
                        "uid": "c1a51a4c-70df-4df4-8e87-da8d5a5789fa"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "eks:node-manager"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "eks:node-manager"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"kubernetes.io/description\":\"Allow all authenticated users to create privileged pods.\"},\"labels\":{\"eks.amazonaws.com/component\":\"pod-security-policy\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"eks:podsecuritypolicy:authenticated\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"eks:podsecuritypolicy:privileged\"},\"subjects\":[{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Group\",\"name\":\"system:authenticated\"}]}\n",
                            "kubernetes.io/description": "Allow all authenticated users to create privileged pods."
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "labels": {
                            "eks.amazonaws.com/component": "pod-security-policy",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "name": "eks:podsecuritypolicy:authenticated",
                        "resourceVersion": "189",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/eks%3Apodsecuritypolicy%3Aauthenticated",
                        "uid": "715aa1e5-d790-4cd4-a8f9-c05324afe579"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "eks:podsecuritypolicy:privileged"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:authenticated"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:basic-user",
                        "resourceVersion": "95",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Abasic-user",
                        "uid": "366ff9bc-0666-43e0-a7f0-3fff140bb149"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:basic-user"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:authenticated"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:attachdetach-controller",
                        "resourceVersion": "103",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aattachdetach-controller",
                        "uid": "3a9c622e-a0da-4e03-b62a-efad80b5ca04"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:attachdetach-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "attachdetach-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:certificate-controller",
                        "resourceVersion": "126",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Acertificate-controller",
                        "uid": "d1df1700-9c72-41bc-82e6-a06da2f1c704"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:certificate-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "certificate-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:clusterrole-aggregation-controller",
                        "resourceVersion": "104",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aclusterrole-aggregation-controller",
                        "uid": "28fc65aa-8545-4657-9959-4d6f5b2822b5"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:clusterrole-aggregation-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "clusterrole-aggregation-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:cronjob-controller",
                        "resourceVersion": "105",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Acronjob-controller",
                        "uid": "0952de94-cb53-4f75-854a-a895e978f8ab"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:cronjob-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "cronjob-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:daemon-set-controller",
                        "resourceVersion": "106",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Adaemon-set-controller",
                        "uid": "ff56a546-4286-4c85-acdc-57ad418f1827"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:daemon-set-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "daemon-set-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:deployment-controller",
                        "resourceVersion": "107",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Adeployment-controller",
                        "uid": "86f54b39-79f6-467d-ae57-7c3ca55bec0a"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:deployment-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "deployment-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:disruption-controller",
                        "resourceVersion": "108",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Adisruption-controller",
                        "uid": "f03454e3-a052-459b-894c-9f10779b7c4a"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:disruption-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "disruption-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:endpoint-controller",
                        "resourceVersion": "109",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aendpoint-controller",
                        "uid": "0812ff3e-4a31-4074-98ea-b57c5847d5d2"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:endpoint-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "endpoint-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:expand-controller",
                        "resourceVersion": "110",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aexpand-controller",
                        "uid": "c1c5cb73-e050-4d9a-8067-3a173397a9b5"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:expand-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "expand-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:generic-garbage-collector",
                        "resourceVersion": "111",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Ageneric-garbage-collector",
                        "uid": "8d1c9bf8-e6c7-4af7-9766-7cd7e4285d67"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:generic-garbage-collector"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "generic-garbage-collector",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:horizontal-pod-autoscaler",
                        "resourceVersion": "112",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Ahorizontal-pod-autoscaler",
                        "uid": "c5154267-2411-4109-9a01-62d6c7eaecbc"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:horizontal-pod-autoscaler"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "horizontal-pod-autoscaler",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:job-controller",
                        "resourceVersion": "113",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Ajob-controller",
                        "uid": "a0d21aae-cdb2-48ed-aa33-69ca8b349d9d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:job-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "job-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:namespace-controller",
                        "resourceVersion": "114",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Anamespace-controller",
                        "uid": "d6471504-a5e5-4059-b2f2-f8e618616be8"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:namespace-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "namespace-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:node-controller",
                        "resourceVersion": "115",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Anode-controller",
                        "uid": "998cbbb2-f5f2-4f57-b422-ebeb628de284"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:node-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "node-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:persistent-volume-binder",
                        "resourceVersion": "116",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Apersistent-volume-binder",
                        "uid": "8769a9d5-022d-4a96-98d8-a921ae8b1454"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:persistent-volume-binder"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "persistent-volume-binder",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:pod-garbage-collector",
                        "resourceVersion": "117",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Apod-garbage-collector",
                        "uid": "f77dcb06-e940-4ba6-bd61-e4e7904fa70a"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:pod-garbage-collector"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "pod-garbage-collector",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:pv-protection-controller",
                        "resourceVersion": "128",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Apv-protection-controller",
                        "uid": "43c00746-c9ee-4823-84a3-7f3f5d58cc23"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:pv-protection-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "pv-protection-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:pvc-protection-controller",
                        "resourceVersion": "127",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Apvc-protection-controller",
                        "uid": "19f80c74-324e-4c4a-a992-c7e95ed45f80"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:pvc-protection-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "pvc-protection-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:replicaset-controller",
                        "resourceVersion": "118",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Areplicaset-controller",
                        "uid": "5e401db5-c6b1-4393-9ebd-7a50aa1de402"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:replicaset-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "replicaset-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:replication-controller",
                        "resourceVersion": "119",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Areplication-controller",
                        "uid": "34711de3-8a35-4af8-81e1-e72f230d7ade"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:replication-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "replication-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:resourcequota-controller",
                        "resourceVersion": "120",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aresourcequota-controller",
                        "uid": "a69a3fb6-75bb-45a3-a9af-5cd2a731a0be"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:resourcequota-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "resourcequota-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:route-controller",
                        "resourceVersion": "121",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aroute-controller",
                        "uid": "fcacdb09-9a8a-4371-bd81-0c3afdd06c88"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:route-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "route-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:service-account-controller",
                        "resourceVersion": "122",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aservice-account-controller",
                        "uid": "5b1a2db5-31eb-4524-a3b9-64365f12919d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:service-account-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "service-account-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:service-controller",
                        "resourceVersion": "123",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Aservice-controller",
                        "uid": "e26207f4-ec38-4092-8435-fb66feba9be7"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:service-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "service-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:statefulset-controller",
                        "resourceVersion": "124",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Astatefulset-controller",
                        "uid": "31f2dde9-4d12-406c-9dfe-f82959556bbb"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:statefulset-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "statefulset-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:49Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:controller:ttl-controller",
                        "resourceVersion": "125",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acontroller%3Attl-controller",
                        "uid": "3f719b4f-c167-4bb4-9d71-880dd374b670"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:controller:ttl-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "ttl-controller",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"rbac.authorization.kubernetes.io/autoupdate\":\"true\"},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/bootstrapping\":\"rbac-defaults\"},\"name\":\"system:coredns\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:coredns\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"coredns\",\"namespace\":\"kube-system\"}]}\n",
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:51Z",
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:coredns",
                        "resourceVersion": "166",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Acoredns",
                        "uid": "51c9fece-19a8-4414-adf4-62ea2ff4b4f1"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:coredns"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "coredns",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:discovery",
                        "resourceVersion": "94",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Adiscovery",
                        "uid": "d35fa0e6-72cb-4f75-8261-93f8f783f1e4"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:discovery"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:authenticated"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:kube-controller-manager",
                        "resourceVersion": "98",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Akube-controller-manager",
                        "uid": "6b72fca8-6244-48b2-923a-09947d814cea"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:kube-controller-manager"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "system:kube-controller-manager"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:kube-dns",
                        "resourceVersion": "99",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Akube-dns",
                        "uid": "153413e5-c777-434e-a06e-a218bb196549"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:kube-dns"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "kube-dns",
                            "namespace": "kube-system"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:kube-scheduler",
                        "resourceVersion": "100",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Akube-scheduler",
                        "uid": "424af628-a2ab-44e6-bb9d-9ae5ae935042"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:kube-scheduler"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "system:kube-scheduler"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:node",
                        "resourceVersion": "102",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Anode",
                        "uid": "750d866a-6a53-4187-b133-7796de546fdb"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:node"
                    }
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:node-proxier",
                        "resourceVersion": "97",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Anode-proxier",
                        "uid": "20f90d16-e264-45bf-8d4d-f86a14d981c0"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:node-proxier"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "system:kube-proxy"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:public-info-viewer",
                        "resourceVersion": "96",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Apublic-info-viewer",
                        "uid": "90dfb824-3157-4214-ae70-9b908fbd6a8e"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:public-info-viewer"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:authenticated"
                        },
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Group",
                            "name": "system:unauthenticated"
                        }
                    ]
                },
                {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:11:48Z",
                        "labels": {
                            "kubernetes.io/bootstrapping": "rbac-defaults"
                        },
                        "name": "system:volume-scheduler",
                        "resourceVersion": "101",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Avolume-scheduler",
                        "uid": "608aaee6-0d87-4117-ba90-594ddcbc959e"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:volume-scheduler"
                    },
                    "subjects": [
                        {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "User",
                            "name": "system:kube-scheduler"
                        }
                    ]
                }
            ],
            "kind": "List",
            "metadata": {
                "resourceVersion": "",
                "selfLink": ""
            }
        }
    ],
    "topology": [
        {
            "type": "cluster",
            "name": "appmeshga"
        },
        {
            "type": "nodegroup",
            "memberof": "appmeshga",
            "name": "ng0"
        },
        {
            "type": "node",
            "memberof": "ng0",
            "name": "i-00112233445566778",
            "ips": [
                "192.168.37.210"
            ]
        },
        {
            "type": "node",
            "memberof": "ng0",
            "name": "i-00998877665544332",
            "ips": [
                "192.168.5.150"
            ]
        },
        {
            "apiVersion": "v1",
            "items": [
                {
                    "apiVersion": "extensions/v1beta1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1"
                        },
                        "creationTimestamp": "2020-03-17T12:31:51Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-controller",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "appmesh-controller",
                            "app.kubernetes.io/version": "0.4.0",
                            "helm.sh/chart": "appmesh-controller-0.5.0"
                        },
                        "name": "appmesh-controller",
                        "namespace": "appmesh-system",
                        "resourceVersion": "2406",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/appmesh-system/deployments/appmesh-controller",
                        "uid": "db1aaeba-f0f9-48b6-bc98-4e1a4dc96d36"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "appmesh-controller",
                                "app.kubernetes.io/name": "appmesh-controller"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "prometheus.io/scrape": "true"
                                },
                                "creationTimestamp": null,
                                "labels": {
                                    "app.kubernetes.io/instance": "appmesh-controller",
                                    "app.kubernetes.io/name": "appmesh-controller",
                                    "app.kubernetes.io/part-of": "appmesh"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/bin/app-mesh-controller",
                                            "--v=0"
                                        ],
                                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/app-mesh-controller:v0.4.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    "curl",
                                                    "-s",
                                                    "http://localhost:10555/healthz"
                                                ]
                                            },
                                            "failureThreshold": 3,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "appmesh-controller",
                                        "ports": [
                                            {
                                                "containerPort": 10555,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    "curl",
                                                    "-s",
                                                    "http://localhost:10555/healthz"
                                                ]
                                            },
                                            "failureThreshold": 3,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "64Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "appmesh-controller",
                                "serviceAccountName": "appmesh-controller",
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2020-03-17T12:32:17Z",
                                "lastUpdateTime": "2020-03-17T12:32:17Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2020-03-17T12:31:51Z",
                                "lastUpdateTime": "2020-03-17T12:32:17Z",
                                "message": "ReplicaSet \"appmesh-controller-6774f54fcc\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                {
                    "apiVersion": "extensions/v1beta1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1"
                        },
                        "creationTimestamp": "2020-03-17T12:33:08Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-inject",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "appmesh-inject",
                            "app.kubernetes.io/version": "0.4.0",
                            "helm.sh/chart": "appmesh-inject-0.11.0"
                        },
                        "name": "appmesh-inject",
                        "namespace": "appmesh-system",
                        "resourceVersion": "2560",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/appmesh-system/deployments/appmesh-inject",
                        "uid": "5919ac94-e91e-4863-ae1b-92bedb0b5df2"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "appmesh-inject",
                                "app.kubernetes.io/name": "appmesh-inject"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "prometheus.io/scrape": "false"
                                },
                                "creationTimestamp": null,
                                "labels": {
                                    "app.kubernetes.io/instance": "appmesh-inject",
                                    "app.kubernetes.io/name": "appmesh-inject",
                                    "app.kubernetes.io/part-of": "appmesh"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "./appmeshinject",
                                            "-sidecar-image=840364872350.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.12.2.1-prod",
                                            "-sidecar-cpu-requests=10m",
                                            "-sidecar-memory-requests=32Mi",
                                            "-init-image=111345817488.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-proxy-route-manager:v2",
                                            "-enable-stats-tags=false",
                                            "-enable-statsd=false"
                                        ],
                                        "env": [
                                            {
                                                "name": "APPMESH_NAME",
                                                "value": "global"
                                            },
                                            {
                                                "name": "APPMESH_LOG_LEVEL",
                                                "value": "info"
                                            }
                                        ],
                                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-app-mesh-inject:v0.4.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "appmesh-inject",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "https",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "64Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "readOnlyRootFilesystem": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/etc/webhook/certs",
                                                "name": "certs",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "appmesh-inject",
                                "serviceAccountName": "appmesh-inject",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "name": "certs",
                                        "secret": {
                                            "defaultMode": 420,
                                            "secretName": "appmesh-inject"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2020-03-17T12:33:21Z",
                                "lastUpdateTime": "2020-03-17T12:33:21Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2020-03-17T12:33:08Z",
                                "lastUpdateTime": "2020-03-17T12:33:21Z",
                                "message": "ReplicaSet \"appmesh-inject-7989448cdc\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                {
                    "apiVersion": "extensions/v1beta1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"eks.amazonaws.com/compute-type\":\"ec2\"},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.6.6\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                        },
                        "creationTimestamp": "2020-03-17T12:11:52Z",
                        "generation": 1,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "kubernetes.io/name": "CoreDNS"
                        },
                        "name": "coredns",
                        "namespace": "kube-system",
                        "resourceVersion": "846",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/kube-system/deployments/coredns",
                        "uid": "c7528183-6aca-4f32-a9f3-c9279254da5b"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "eks.amazonaws.com/component": "coredns",
                                "k8s-app": "kube-dns"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "eks.amazonaws.com/compute-type": "ec2"
                                },
                                "creationTimestamp": null,
                                "labels": {
                                    "eks.amazonaws.com/component": "coredns",
                                    "k8s-app": "kube-dns"
                                }
                            },
                            "spec": {
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "beta.kubernetes.io/os",
                                                            "operator": "In",
                                                            "values": [
                                                                "linux"
                                                            ]
                                                        },
                                                        {
                                                            "key": "beta.kubernetes.io/arch",
                                                            "operator": "In",
                                                            "values": [
                                                                "amd64"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "k8s-app",
                                                                "operator": "In",
                                                                "values": [
                                                                    "kube-dns"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "topologyKey": "kubernetes.io/hostname"
                                                },
                                                "weight": 100
                                            }
                                        ]
                                    }
                                },
                                "containers": [
                                    {
                                        "args": [
                                            "-conf",
                                            "/etc/coredns/Corefile"
                                        ],
                                        "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.6.6",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 5,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 60,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "coredns",
                                        "ports": [
                                            {
                                                "containerPort": 53,
                                                "name": "dns",
                                                "protocol": "UDP"
                                            },
                                            {
                                                "containerPort": 53,
                                                "name": "dns-tcp",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9153,
                                                "name": "metrics",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "memory": "170Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "70Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_BIND_SERVICE"
                                                ],
                                                "drop": [
                                                    "all"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/etc/coredns",
                                                "name": "config-volume",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/tmp",
                                                "name": "tmp"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "Default",
                                "priorityClassName": "system-cluster-critical",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "coredns",
                                "serviceAccountName": "coredns",
                                "terminationGracePeriodSeconds": 30,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master"
                                    },
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    }
                                ],
                                "volumes": [
                                    {
                                        "emptyDir": {},
                                        "name": "tmp"
                                    },
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "items": [
                                                {
                                                    "key": "Corefile",
                                                    "path": "Corefile"
                                                }
                                            ],
                                            "name": "coredns"
                                        },
                                        "name": "config-volume"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2020-03-17T12:16:44Z",
                                "lastUpdateTime": "2020-03-17T12:16:44Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2020-03-17T12:12:02Z",
                                "lastUpdateTime": "2020-03-17T12:16:53Z",
                                "message": "ReplicaSet \"coredns-6658f9f447\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                {
                    "apiVersion": "extensions/v1beta1",
                    "kind": "ReplicaSet",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/desired-replicas": "1",
                            "deployment.kubernetes.io/max-replicas": "2",
                            "deployment.kubernetes.io/revision": "1"
                        },
                        "creationTimestamp": "2020-03-17T12:31:51Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-controller",
                            "app.kubernetes.io/name": "appmesh-controller",
                            "app.kubernetes.io/part-of": "appmesh",
                            "pod-template-hash": "6774f54fcc"
                        },
                        "name": "appmesh-controller-6774f54fcc",
                        "namespace": "appmesh-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "Deployment",
                                "name": "appmesh-controller",
                                "uid": "db1aaeba-f0f9-48b6-bc98-4e1a4dc96d36"
                            }
                        ],
                        "resourceVersion": "2405",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/appmesh-system/replicasets/appmesh-controller-6774f54fcc",
                        "uid": "32ed0949-5677-4756-96f0-92c013cc6721"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "appmesh-controller",
                                "app.kubernetes.io/name": "appmesh-controller",
                                "pod-template-hash": "6774f54fcc"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "prometheus.io/scrape": "true"
                                },
                                "creationTimestamp": null,
                                "labels": {
                                    "app.kubernetes.io/instance": "appmesh-controller",
                                    "app.kubernetes.io/name": "appmesh-controller",
                                    "app.kubernetes.io/part-of": "appmesh",
                                    "pod-template-hash": "6774f54fcc"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/bin/app-mesh-controller",
                                            "--v=0"
                                        ],
                                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/app-mesh-controller:v0.4.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    "curl",
                                                    "-s",
                                                    "http://localhost:10555/healthz"
                                                ]
                                            },
                                            "failureThreshold": 3,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "appmesh-controller",
                                        "ports": [
                                            {
                                                "containerPort": 10555,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "exec": {
                                                "command": [
                                                    "curl",
                                                    "-s",
                                                    "http://localhost:10555/healthz"
                                                ]
                                            },
                                            "failureThreshold": 3,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "2",
                                                "memory": "1Gi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "64Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "appmesh-controller",
                                "serviceAccountName": "appmesh-controller",
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "fullyLabeledReplicas": 1,
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1
                    }
                },
                {
                    "apiVersion": "extensions/v1beta1",
                    "kind": "ReplicaSet",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/desired-replicas": "1",
                            "deployment.kubernetes.io/max-replicas": "2",
                            "deployment.kubernetes.io/revision": "1"
                        },
                        "creationTimestamp": "2020-03-17T12:33:08Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-inject",
                            "app.kubernetes.io/name": "appmesh-inject",
                            "app.kubernetes.io/part-of": "appmesh",
                            "pod-template-hash": "7989448cdc"
                        },
                        "name": "appmesh-inject-7989448cdc",
                        "namespace": "appmesh-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "Deployment",
                                "name": "appmesh-inject",
                                "uid": "5919ac94-e91e-4863-ae1b-92bedb0b5df2"
                            }
                        ],
                        "resourceVersion": "2558",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/appmesh-system/replicasets/appmesh-inject-7989448cdc",
                        "uid": "22c0be05-bb52-4c68-b9b6-57a79f129423"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "appmesh-inject",
                                "app.kubernetes.io/name": "appmesh-inject",
                                "pod-template-hash": "7989448cdc"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "prometheus.io/scrape": "false"
                                },
                                "creationTimestamp": null,
                                "labels": {
                                    "app.kubernetes.io/instance": "appmesh-inject",
                                    "app.kubernetes.io/name": "appmesh-inject",
                                    "app.kubernetes.io/part-of": "appmesh",
                                    "pod-template-hash": "7989448cdc"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "./appmeshinject",
                                            "-sidecar-image=840364872350.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.12.2.1-prod",
                                            "-sidecar-cpu-requests=10m",
                                            "-sidecar-memory-requests=32Mi",
                                            "-init-image=111345817488.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-proxy-route-manager:v2",
                                            "-enable-stats-tags=false",
                                            "-enable-statsd=false"
                                        ],
                                        "env": [
                                            {
                                                "name": "APPMESH_NAME",
                                                "value": "global"
                                            },
                                            {
                                                "name": "APPMESH_LOG_LEVEL",
                                                "value": "info"
                                            }
                                        ],
                                        "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-app-mesh-inject:v0.4.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "appmesh-inject",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "https",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "500m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "64Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "readOnlyRootFilesystem": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/etc/webhook/certs",
                                                "name": "certs",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "appmesh-inject",
                                "serviceAccountName": "appmesh-inject",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "name": "certs",
                                        "secret": {
                                            "defaultMode": 420,
                                            "secretName": "appmesh-inject"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "fullyLabeledReplicas": 1,
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1
                    }
                },
                {
                    "apiVersion": "extensions/v1beta1",
                    "kind": "ReplicaSet",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/desired-replicas": "2",
                            "deployment.kubernetes.io/max-replicas": "3",
                            "deployment.kubernetes.io/revision": "1"
                        },
                        "creationTimestamp": "2020-03-17T12:12:02Z",
                        "generation": 1,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "6658f9f447"
                        },
                        "name": "coredns-6658f9f447",
                        "namespace": "kube-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "Deployment",
                                "name": "coredns",
                                "uid": "c7528183-6aca-4f32-a9f3-c9279254da5b"
                            }
                        ],
                        "resourceVersion": "844",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/kube-system/replicasets/coredns-6658f9f447",
                        "uid": "8e2b6216-f54e-414c-b3ba-0c3e1a8edbec"
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "eks.amazonaws.com/component": "coredns",
                                "k8s-app": "kube-dns",
                                "pod-template-hash": "6658f9f447"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "eks.amazonaws.com/compute-type": "ec2"
                                },
                                "creationTimestamp": null,
                                "labels": {
                                    "eks.amazonaws.com/component": "coredns",
                                    "k8s-app": "kube-dns",
                                    "pod-template-hash": "6658f9f447"
                                }
                            },
                            "spec": {
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "beta.kubernetes.io/os",
                                                            "operator": "In",
                                                            "values": [
                                                                "linux"
                                                            ]
                                                        },
                                                        {
                                                            "key": "beta.kubernetes.io/arch",
                                                            "operator": "In",
                                                            "values": [
                                                                "amd64"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "podAntiAffinity": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": [
                                            {
                                                "podAffinityTerm": {
                                                    "labelSelector": {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "k8s-app",
                                                                "operator": "In",
                                                                "values": [
                                                                    "kube-dns"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "topologyKey": "kubernetes.io/hostname"
                                                },
                                                "weight": 100
                                            }
                                        ]
                                    }
                                },
                                "containers": [
                                    {
                                        "args": [
                                            "-conf",
                                            "/etc/coredns/Corefile"
                                        ],
                                        "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.6.6",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 5,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 60,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "coredns",
                                        "ports": [
                                            {
                                                "containerPort": 53,
                                                "name": "dns",
                                                "protocol": "UDP"
                                            },
                                            {
                                                "containerPort": 53,
                                                "name": "dns-tcp",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9153,
                                                "name": "metrics",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/health",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "memory": "170Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "70Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_BIND_SERVICE"
                                                ],
                                                "drop": [
                                                    "all"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/etc/coredns",
                                                "name": "config-volume",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/tmp",
                                                "name": "tmp"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "Default",
                                "priorityClassName": "system-cluster-critical",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "coredns",
                                "serviceAccountName": "coredns",
                                "terminationGracePeriodSeconds": 30,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master"
                                    },
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    }
                                ],
                                "volumes": [
                                    {
                                        "emptyDir": {},
                                        "name": "tmp"
                                    },
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "items": [
                                                {
                                                    "key": "Corefile",
                                                    "path": "Corefile"
                                                }
                                            ],
                                            "name": "coredns"
                                        },
                                        "name": "config-volume"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "fullyLabeledReplicas": 2,
                        "observedGeneration": 1,
                        "readyReplicas": 2,
                        "replicas": 2
                    }
                },
                {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "annotations": {
                            "kubernetes.io/psp": "eks.privileged",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": "2020-03-17T12:31:51Z",
                        "generateName": "appmesh-controller-6774f54fcc-",
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-controller",
                            "app.kubernetes.io/name": "appmesh-controller",
                            "app.kubernetes.io/part-of": "appmesh",
                            "pod-template-hash": "6774f54fcc"
                        },
                        "name": "appmesh-controller-6774f54fcc-d7rnd",
                        "namespace": "appmesh-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "ReplicaSet",
                                "name": "appmesh-controller-6774f54fcc",
                                "uid": "32ed0949-5677-4756-96f0-92c013cc6721"
                            }
                        ],
                        "resourceVersion": "2404",
                        "selfLink": "/api/v1/namespaces/appmesh-system/pods/appmesh-controller-6774f54fcc-d7rnd",
                        "uid": "f26f153e-a8f2-4e90-a388-f0fed98435c9"
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/bin/app-mesh-controller",
                                    "--v=0"
                                ],
                                "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/app-mesh-controller:v0.4.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "curl",
                                            "-s",
                                            "http://localhost:10555/healthz"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "appmesh-controller",
                                "ports": [
                                    {
                                        "containerPort": 10555,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "curl",
                                            "-s",
                                            "http://localhost:10555/healthz"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "64Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                        "name": "appmesh-controller-token-82kxk",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeName": "ip-192-168-37-210.eu-west-1.compute.internal",
                        "priority": 0,
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "appmesh-controller",
                        "serviceAccountName": "appmesh-controller",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "tolerationSeconds": 300
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "tolerationSeconds": 300
                            }
                        ],
                        "volumes": [
                            {
                                "name": "appmesh-controller-token-82kxk",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "appmesh-controller-token-82kxk"
                                }
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:31:51Z",
                                "status": "True",
                                "type": "Initialized"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:32:17Z",
                                "status": "True",
                                "type": "Ready"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:32:17Z",
                                "status": "True",
                                "type": "ContainersReady"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:31:51Z",
                                "status": "True",
                                "type": "PodScheduled"
                            }
                        ],
                        "containerStatuses": [
                            {
                                "containerID": "docker://d70bbd3525bd401b3d84427562d413b5eb00bd7b0cc5bb15deb11d2bbd045b10",
                                "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/app-mesh-controller:v0.4.0",
                                "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/app-mesh-controller@sha256:5b162902433f4b285506945f9d52b7747a2acd7fb9d9a1d7e7c884796c392ee6",
                                "lastState": {},
                                "name": "appmesh-controller",
                                "ready": true,
                                "restartCount": 0,
                                "state": {
                                    "running": {
                                        "startedAt": "2020-03-17T12:32:11Z"
                                    }
                                }
                            }
                        ],
                        "hostIP": "192.168.37.210",
                        "phase": "Running",
                        "podIP": "192.168.37.158",
                        "qosClass": "Burstable",
                        "startTime": "2020-03-17T12:31:51Z"
                    }
                },
                {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "annotations": {
                            "kubernetes.io/psp": "eks.privileged",
                            "prometheus.io/scrape": "false"
                        },
                        "creationTimestamp": "2020-03-17T12:33:08Z",
                        "generateName": "appmesh-inject-7989448cdc-",
                        "labels": {
                            "app.kubernetes.io/instance": "appmesh-inject",
                            "app.kubernetes.io/name": "appmesh-inject",
                            "app.kubernetes.io/part-of": "appmesh",
                            "pod-template-hash": "7989448cdc"
                        },
                        "name": "appmesh-inject-7989448cdc-pjjmp",
                        "namespace": "appmesh-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "ReplicaSet",
                                "name": "appmesh-inject-7989448cdc",
                                "uid": "22c0be05-bb52-4c68-b9b6-57a79f129423"
                            }
                        ],
                        "resourceVersion": "2557",
                        "selfLink": "/api/v1/namespaces/appmesh-system/pods/appmesh-inject-7989448cdc-pjjmp",
                        "uid": "f9cb64b9-767b-4b9d-b892-5fbcc7482162"
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "./appmeshinject",
                                    "-sidecar-image=840364872350.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.12.2.1-prod",
                                    "-sidecar-cpu-requests=10m",
                                    "-sidecar-memory-requests=32Mi",
                                    "-init-image=111345817488.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-proxy-route-manager:v2",
                                    "-enable-stats-tags=false",
                                    "-enable-statsd=false"
                                ],
                                "env": [
                                    {
                                        "name": "APPMESH_NAME",
                                        "value": "global"
                                    },
                                    {
                                        "name": "APPMESH_LOG_LEVEL",
                                        "value": "info"
                                    }
                                ],
                                "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-app-mesh-inject:v0.4.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "appmesh-inject",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "64Mi"
                                    }
                                },
                                "securityContext": {
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/webhook/certs",
                                        "name": "certs",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                        "name": "appmesh-inject-token-z9pds",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeName": "ip-192-168-5-150.eu-west-1.compute.internal",
                        "priority": 0,
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "appmesh-inject",
                        "serviceAccountName": "appmesh-inject",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "tolerationSeconds": 300
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "tolerationSeconds": 300
                            }
                        ],
                        "volumes": [
                            {
                                "name": "certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "appmesh-inject"
                                }
                            },
                            {
                                "name": "appmesh-inject-token-z9pds",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "appmesh-inject-token-z9pds"
                                }
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:33:08Z",
                                "status": "True",
                                "type": "Initialized"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:33:21Z",
                                "status": "True",
                                "type": "Ready"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:33:21Z",
                                "status": "True",
                                "type": "ContainersReady"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:33:08Z",
                                "status": "True",
                                "type": "PodScheduled"
                            }
                        ],
                        "containerStatuses": [
                            {
                                "containerID": "docker://a7393fcade5bdd79ee55afc2e5abcdd1c767e4d934f4939038f8a4449b535407",
                                "image": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-app-mesh-inject:v0.4.0",
                                "imageID": "docker-pullable://602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-app-mesh-inject@sha256:c53155f596582a68e6e3ead02a7d3e6b968f574c5e16cef5c087b827b1731603",
                                "lastState": {},
                                "name": "appmesh-inject",
                                "ready": true,
                                "restartCount": 0,
                                "state": {
                                    "running": {
                                        "startedAt": "2020-03-17T12:33:17Z"
                                    }
                                }
                            }
                        ],
                        "hostIP": "192.168.5.150",
                        "phase": "Running",
                        "podIP": "192.168.3.215",
                        "qosClass": "Burstable",
                        "startTime": "2020-03-17T12:33:08Z"
                    }
                },
                {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "annotations": {
                            "kubernetes.io/psp": "eks.privileged"
                        },
                        "creationTimestamp": "2020-03-17T12:16:23Z",
                        "generateName": "aws-node-",
                        "labels": {
                            "controller-revision-hash": "d765786b5",
                            "k8s-app": "aws-node",
                            "pod-template-generation": "1"
                        },
                        "name": "aws-node-27phs",
                        "namespace": "kube-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "DaemonSet",
                                "name": "aws-node",
                                "uid": "6070086b-0470-4cf1-a59b-3903587255ac"
                            }
                        ],
                        "resourceVersion": "764",
                        "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-27phs",
                        "uid": "5c2ed618-d7e2-446e-9c73-f321b3bbcdd2"
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchFields": [
                                                {
                                                    "key": "metadata.name",
                                                    "operator": "In",
                                                    "values": [
                                                        "ip-192-168-5-150.eu-west-1.compute.internal"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "MY_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/amazon-k8s-cni:v1.5.5",
                                "imagePullPolicy": "Always",
                                "name": "aws-node",
                                "ports": [
                                    {
                                        "containerPort": 61678,
                                        "hostPort": 61678,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m"
                                    }
                                },
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host/opt/cni/bin",
                                        "name": "cni-bin-dir"
                                    },
                                    {
                                        "mountPath": "/host/etc/cni/net.d",
                                        "name": "cni-net-dir"
                                    },
                                    {
                                        "mountPath": "/host/var/log",
                                        "name": "log-dir"
                                    },
                                    {
                                        "mountPath": "/var/run/docker.sock",
                                        "name": "dockersock"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                        "name": "aws-node-token-fn6rm",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "hostNetwork": true,
                        "nodeName": "ip-192-168-5-150.eu-west-1.compute.internal",
                        "priority": 2000001000,
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "aws-node",
                        "serviceAccountName": "aws-node",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/disk-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/memory-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/pid-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/unschedulable",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/network-unavailable",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                },
                                "name": "cni-bin-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                },
                                "name": "cni-net-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                },
                                "name": "log-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/docker.sock",
                                    "type": ""
                                },
                                "name": "dockersock"
                            },
                            {
                                "name": "aws-node-token-fn6rm",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "aws-node-token-fn6rm"
                                }
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:23Z",
                                "status": "True",
                                "type": "Initialized"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:31Z",
                                "status": "True",
                                "type": "Ready"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:31Z",
                                "status": "True",
                                "type": "ContainersReady"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:23Z",
                                "status": "True",
                                "type": "PodScheduled"
                            }
                        ],
                        "containerStatuses": [
                            {
                                "containerID": "docker://9e04ad754b87fa2acaf1942888098e73a37256f9ca5f6b285fd82e9ba2d91c6b",
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/amazon-k8s-cni:v1.5.5",
                                "imageID": "docker-pullable://602401143452.dkr.ecr.eu-west-1.amazonaws.com/amazon-k8s-cni@sha256:a6d23b9fb3d4ba549321e32a28c42d8e79da203897072e93874472ab9e80b768",
                                "lastState": {},
                                "name": "aws-node",
                                "ready": true,
                                "restartCount": 0,
                                "state": {
                                    "running": {
                                        "startedAt": "2020-03-17T12:16:31Z"
                                    }
                                }
                            }
                        ],
                        "hostIP": "192.168.5.150",
                        "phase": "Running",
                        "podIP": "192.168.5.150",
                        "qosClass": "Burstable",
                        "startTime": "2020-03-17T12:16:23Z"
                    }
                },
                {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "annotations": {
                            "kubernetes.io/psp": "eks.privileged"
                        },
                        "creationTimestamp": "2020-03-17T12:16:25Z",
                        "generateName": "aws-node-",
                        "labels": {
                            "controller-revision-hash": "d765786b5",
                            "k8s-app": "aws-node",
                            "pod-template-generation": "1"
                        },
                        "name": "aws-node-64x5t",
                        "namespace": "kube-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "DaemonSet",
                                "name": "aws-node",
                                "uid": "6070086b-0470-4cf1-a59b-3903587255ac"
                            }
                        ],
                        "resourceVersion": "784",
                        "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-64x5t",
                        "uid": "8dd21a04-ae66-4b6d-8813-a98666dfcbfc"
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchFields": [
                                                {
                                                    "key": "metadata.name",
                                                    "operator": "In",
                                                    "values": [
                                                        "ip-192-168-37-210.eu-west-1.compute.internal"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "MY_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/amazon-k8s-cni:v1.5.5",
                                "imagePullPolicy": "Always",
                                "name": "aws-node",
                                "ports": [
                                    {
                                        "containerPort": 61678,
                                        "hostPort": 61678,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m"
                                    }
                                },
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host/opt/cni/bin",
                                        "name": "cni-bin-dir"
                                    },
                                    {
                                        "mountPath": "/host/etc/cni/net.d",
                                        "name": "cni-net-dir"
                                    },
                                    {
                                        "mountPath": "/host/var/log",
                                        "name": "log-dir"
                                    },
                                    {
                                        "mountPath": "/var/run/docker.sock",
                                        "name": "dockersock"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                        "name": "aws-node-token-fn6rm",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "hostNetwork": true,
                        "nodeName": "ip-192-168-37-210.eu-west-1.compute.internal",
                        "priority": 2000001000,
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "aws-node",
                        "serviceAccountName": "aws-node",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/disk-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/memory-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/pid-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/unschedulable",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/network-unavailable",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                },
                                "name": "cni-bin-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                },
                                "name": "cni-net-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                },
                                "name": "log-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/docker.sock",
                                    "type": ""
                                },
                                "name": "dockersock"
                            },
                            {
                                "name": "aws-node-token-fn6rm",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "aws-node-token-fn6rm"
                                }
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:25Z",
                                "status": "True",
                                "type": "Initialized"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:34Z",
                                "status": "True",
                                "type": "Ready"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:34Z",
                                "status": "True",
                                "type": "ContainersReady"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:25Z",
                                "status": "True",
                                "type": "PodScheduled"
                            }
                        ],
                        "containerStatuses": [
                            {
                                "containerID": "docker://21cac88825f6eafda86654a2dab3e242c313ef0152db90c4a3331ea55b975a9c",
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/amazon-k8s-cni:v1.5.5",
                                "imageID": "docker-pullable://602401143452.dkr.ecr.eu-west-1.amazonaws.com/amazon-k8s-cni@sha256:a6d23b9fb3d4ba549321e32a28c42d8e79da203897072e93874472ab9e80b768",
                                "lastState": {},
                                "name": "aws-node",
                                "ready": true,
                                "restartCount": 0,
                                "state": {
                                    "running": {
                                        "startedAt": "2020-03-17T12:16:33Z"
                                    }
                                }
                            }
                        ],
                        "hostIP": "192.168.37.210",
                        "phase": "Running",
                        "podIP": "192.168.37.210",
                        "qosClass": "Burstable",
                        "startTime": "2020-03-17T12:16:25Z"
                    }
                },
                {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2",
                            "kubernetes.io/psp": "eks.privileged"
                        },
                        "creationTimestamp": "2020-03-17T12:12:02Z",
                        "generateName": "coredns-6658f9f447-",
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "6658f9f447"
                        },
                        "name": "coredns-6658f9f447-kpq9s",
                        "namespace": "kube-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "ReplicaSet",
                                "name": "coredns-6658f9f447",
                                "uid": "8e2b6216-f54e-414c-b3ba-0c3e1a8edbec"
                            }
                        ],
                        "resourceVersion": "843",
                        "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-6658f9f447-kpq9s",
                        "uid": "f04d861f-4910-45c7-b34a-1183e24cb1dc"
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.6.6",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "coredns",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9153,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/coredns",
                                        "name": "config-volume",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                        "name": "coredns-token-gnh8j",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "enableServiceLinks": true,
                        "nodeName": "ip-192-168-37-210.eu-west-1.compute.internal",
                        "priority": 2000000000,
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "coredns",
                        "serviceAccountName": "coredns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "tolerationSeconds": 300
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "tolerationSeconds": 300
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "name": "coredns"
                                },
                                "name": "config-volume"
                            },
                            {
                                "name": "coredns-token-gnh8j",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "coredns-token-gnh8j"
                                }
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:41Z",
                                "status": "True",
                                "type": "Initialized"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:53Z",
                                "status": "True",
                                "type": "Ready"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:53Z",
                                "status": "True",
                                "type": "ContainersReady"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:41Z",
                                "status": "True",
                                "type": "PodScheduled"
                            }
                        ],
                        "containerStatuses": [
                            {
                                "containerID": "docker://06a3d336ba8e6c2ba8ef4331b7f39084923fdeb9ac4b7a1dd45cacfbb6835998",
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.6.6",
                                "imageID": "docker-pullable://602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns@sha256:ff6eadc11a45d8cbad5473b0950e01230c7f23bcb53392c80550feab69f905f1",
                                "lastState": {},
                                "name": "coredns",
                                "ready": true,
                                "restartCount": 0,
                                "state": {
                                    "running": {
                                        "startedAt": "2020-03-17T12:16:43Z"
                                    }
                                }
                            }
                        ],
                        "hostIP": "192.168.37.210",
                        "phase": "Running",
                        "podIP": "192.168.46.217",
                        "qosClass": "Burstable",
                        "startTime": "2020-03-17T12:16:41Z"
                    }
                },
                {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2",
                            "kubernetes.io/psp": "eks.privileged"
                        },
                        "creationTimestamp": "2020-03-17T12:12:02Z",
                        "generateName": "coredns-6658f9f447-",
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "6658f9f447"
                        },
                        "name": "coredns-6658f9f447-lfkn5",
                        "namespace": "kube-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "ReplicaSet",
                                "name": "coredns-6658f9f447",
                                "uid": "8e2b6216-f54e-414c-b3ba-0c3e1a8edbec"
                            }
                        ],
                        "resourceVersion": "824",
                        "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-6658f9f447-lfkn5",
                        "uid": "c0f0d537-5122-49e3-88c8-5c0ecb3411fe"
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.6.6",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "coredns",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9153,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/coredns",
                                        "name": "config-volume",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                        "name": "coredns-token-gnh8j",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "enableServiceLinks": true,
                        "nodeName": "ip-192-168-5-150.eu-west-1.compute.internal",
                        "priority": 2000000000,
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "coredns",
                        "serviceAccountName": "coredns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "tolerationSeconds": 300
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "tolerationSeconds": 300
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "name": "coredns"
                                },
                                "name": "config-volume"
                            },
                            {
                                "name": "coredns-token-gnh8j",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "coredns-token-gnh8j"
                                }
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:41Z",
                                "status": "True",
                                "type": "Initialized"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:44Z",
                                "status": "True",
                                "type": "Ready"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:44Z",
                                "status": "True",
                                "type": "ContainersReady"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:41Z",
                                "status": "True",
                                "type": "PodScheduled"
                            }
                        ],
                        "containerStatuses": [
                            {
                                "containerID": "docker://799e2162f9f91a4fdc30f9daf38a9c610ca25a4acf2c06333b9d4df83b8a5c93",
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.6.6",
                                "imageID": "docker-pullable://602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns@sha256:ff6eadc11a45d8cbad5473b0950e01230c7f23bcb53392c80550feab69f905f1",
                                "lastState": {},
                                "name": "coredns",
                                "ready": true,
                                "restartCount": 0,
                                "state": {
                                    "running": {
                                        "startedAt": "2020-03-17T12:16:43Z"
                                    }
                                }
                            }
                        ],
                        "hostIP": "192.168.5.150",
                        "phase": "Running",
                        "podIP": "192.168.19.117",
                        "qosClass": "Burstable",
                        "startTime": "2020-03-17T12:16:41Z"
                    }
                },
                {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "annotations": {
                            "kubernetes.io/psp": "eks.privileged"
                        },
                        "creationTimestamp": "2020-03-17T12:16:25Z",
                        "generateName": "kube-proxy-",
                        "labels": {
                            "controller-revision-hash": "74c7d8d4cc",
                            "k8s-app": "kube-proxy",
                            "pod-template-generation": "1"
                        },
                        "name": "kube-proxy-hjpzd",
                        "namespace": "kube-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "DaemonSet",
                                "name": "kube-proxy",
                                "uid": "40398b91-d041-4387-81e4-2cf3b00b24b1"
                            }
                        ],
                        "resourceVersion": "776",
                        "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-hjpzd",
                        "uid": "14287ba0-e2fd-49e5-9355-0e356b903f8b"
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchFields": [
                                                {
                                                    "key": "metadata.name",
                                                    "operator": "In",
                                                    "values": [
                                                        "ip-192-168-37-210.eu-west-1.compute.internal"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "kube-proxy",
                                    "--v=2",
                                    "--config=/var/lib/kube-proxy-config/config"
                                ],
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/kube-proxy:v1.15.10",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-proxy",
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/log",
                                        "name": "varlog"
                                    },
                                    {
                                        "mountPath": "/run/xtables.lock",
                                        "name": "xtables-lock"
                                    },
                                    {
                                        "mountPath": "/lib/modules",
                                        "name": "lib-modules",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/lib/kube-proxy/",
                                        "name": "kubeconfig"
                                    },
                                    {
                                        "mountPath": "/var/lib/kube-proxy-config/",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                        "name": "kube-proxy-token-562l7",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "hostNetwork": true,
                        "nodeName": "ip-192-168-37-210.eu-west-1.compute.internal",
                        "priority": 2000001000,
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kube-proxy",
                        "serviceAccountName": "kube-proxy",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/disk-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/memory-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/pid-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/unschedulable",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/network-unavailable",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                },
                                "name": "varlog"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                },
                                "name": "xtables-lock"
                            },
                            {
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                },
                                "name": "lib-modules"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-proxy"
                                },
                                "name": "kubeconfig"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-proxy-config"
                                },
                                "name": "config"
                            },
                            {
                                "name": "kube-proxy-token-562l7",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "kube-proxy-token-562l7"
                                }
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:25Z",
                                "status": "True",
                                "type": "Initialized"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:33Z",
                                "status": "True",
                                "type": "Ready"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:33Z",
                                "status": "True",
                                "type": "ContainersReady"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:25Z",
                                "status": "True",
                                "type": "PodScheduled"
                            }
                        ],
                        "containerStatuses": [
                            {
                                "containerID": "docker://d57579d62a62e99b7cc10550bb9059ee137cc498e5f869a1b7a4c18d2d352470",
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/kube-proxy:v1.15.10",
                                "imageID": "docker-pullable://602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/kube-proxy@sha256:c71e5efc020c25259da697705b6c9e4dd6b434926a9ce3b5b2d1f48d194d0e46",
                                "lastState": {},
                                "name": "kube-proxy",
                                "ready": true,
                                "restartCount": 0,
                                "state": {
                                    "running": {
                                        "startedAt": "2020-03-17T12:16:32Z"
                                    }
                                }
                            }
                        ],
                        "hostIP": "192.168.37.210",
                        "phase": "Running",
                        "podIP": "192.168.37.210",
                        "qosClass": "Burstable",
                        "startTime": "2020-03-17T12:16:25Z"
                    }
                },
                {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "metadata": {
                        "annotations": {
                            "kubernetes.io/psp": "eks.privileged"
                        },
                        "creationTimestamp": "2020-03-17T12:16:23Z",
                        "generateName": "kube-proxy-",
                        "labels": {
                            "controller-revision-hash": "74c7d8d4cc",
                            "k8s-app": "kube-proxy",
                            "pod-template-generation": "1"
                        },
                        "name": "kube-proxy-tpt2p",
                        "namespace": "kube-system",
                        "ownerReferences": [
                            {
                                "apiVersion": "apps/v1",
                                "blockOwnerDeletion": true,
                                "controller": true,
                                "kind": "DaemonSet",
                                "name": "kube-proxy",
                                "uid": "40398b91-d041-4387-81e4-2cf3b00b24b1"
                            }
                        ],
                        "resourceVersion": "754",
                        "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-tpt2p",
                        "uid": "c89e2d76-b183-480d-ae8d-112343cfaaaf"
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchFields": [
                                                {
                                                    "key": "metadata.name",
                                                    "operator": "In",
                                                    "values": [
                                                        "ip-192-168-5-150.eu-west-1.compute.internal"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "kube-proxy",
                                    "--v=2",
                                    "--config=/var/lib/kube-proxy-config/config"
                                ],
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/kube-proxy:v1.15.10",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-proxy",
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/log",
                                        "name": "varlog"
                                    },
                                    {
                                        "mountPath": "/run/xtables.lock",
                                        "name": "xtables-lock"
                                    },
                                    {
                                        "mountPath": "/lib/modules",
                                        "name": "lib-modules",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/lib/kube-proxy/",
                                        "name": "kubeconfig"
                                    },
                                    {
                                        "mountPath": "/var/lib/kube-proxy-config/",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                        "name": "kube-proxy-token-562l7",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "hostNetwork": true,
                        "nodeName": "ip-192-168-5-150.eu-west-1.compute.internal",
                        "priority": 2000001000,
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kube-proxy",
                        "serviceAccountName": "kube-proxy",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/disk-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/memory-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/pid-pressure",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/unschedulable",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/network-unavailable",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                },
                                "name": "varlog"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                },
                                "name": "xtables-lock"
                            },
                            {
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                },
                                "name": "lib-modules"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-proxy"
                                },
                                "name": "kubeconfig"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-proxy-config"
                                },
                                "name": "config"
                            },
                            {
                                "name": "kube-proxy-token-562l7",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "kube-proxy-token-562l7"
                                }
                            }
                        ]
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:23Z",
                                "status": "True",
                                "type": "Initialized"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:29Z",
                                "status": "True",
                                "type": "Ready"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:29Z",
                                "status": "True",
                                "type": "ContainersReady"
                            },
                            {
                                "lastProbeTime": null,
                                "lastTransitionTime": "2020-03-17T12:16:23Z",
                                "status": "True",
                                "type": "PodScheduled"
                            }
                        ],
                        "containerStatuses": [
                            {
                                "containerID": "docker://94e8ce373ff51350b5eccbfd5f072b684123a63da56e72d402eab92e3777ca05",
                                "image": "602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/kube-proxy:v1.15.10",
                                "imageID": "docker-pullable://602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/kube-proxy@sha256:c71e5efc020c25259da697705b6c9e4dd6b434926a9ce3b5b2d1f48d194d0e46",
                                "lastState": {},
                                "name": "kube-proxy",
                                "ready": true,
                                "restartCount": 0,
                                "state": {
                                    "running": {
                                        "startedAt": "2020-03-17T12:16:29Z"
                                    }
                                }
                            }
                        ],
                        "hostIP": "192.168.5.150",
                        "phase": "Running",
                        "podIP": "192.168.5.150",
                        "qosClass": "Burstable",
                        "startTime": "2020-03-17T12:16:23Z"
                    }
                }
            ],
            "kind": "List",
            "metadata": {
                "resourceVersion": "",
                "selfLink": ""
            }
        }
    ]
}